{"ast":null,"code":"var _jsxFileName = \"/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport styles from './App.module.scss';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport OPENAI_API_KEY from './constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const sendMessage = async e => {\n    const completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: message\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.home__form,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: 'send',\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","styles","Input","Button","OPENAI_API_KEY","jsxDEV","_jsxDEV","App","_s","message","setMessage","configuration","apiKey","openai","sendMessage","e","completion","createChatCompletion","model","messages","role","content","className","home","children","fileName","_jsxFileName","lineNumber","columnNumber","home__form","type","value","onChange","target","text","onClick","_c","$RefreshReg$"],"sources":["/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {Configuration, OpenAIApi} from 'openai'\n\nimport styles from './App.module.scss';\n\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\n\nimport OPENAI_API_KEY from './constants.js'\n\n\nconst App = () => {\n  const [message, setMessage] = useState('');\n\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const sendMessage = async (e) => {\n    const completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{role: \"user\", content: message }],\n    });\n  \n  }\n\n  return (\n    <div className={styles.home}>\n      <div className=\"messages\">\n\n      </div>\n      <form className={styles.home__form}>\n        <Input \n          type='text'\n          value={message}\n          onChange = {(e) => setMessage(e.target.value)}\n        />\n        <Button text={'send'} onClick={sendMessage}/>\n      </form>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,aAAa,EAAEC,SAAS,QAAO,QAAQ;AAE/C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AAEnD,OAAOC,cAAc,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,aAAa,GAAG,IAAIZ,aAAa,CAAC;IACtCa,MAAM,EAAER;EACV,CAAC,CAAC;EAEF,MAAMS,MAAM,GAAG,IAAIb,SAAS,CAACW,aAAa,CAAC;EAE3C,MAAMG,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/B,MAAMC,UAAU,GAAG,MAAMH,MAAM,CAACI,oBAAoB,CAAC;MACnDC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CAAC;QAACC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEZ;MAAQ,CAAC;IAC9C,CAAC,CAAC;EAEJ,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAErB,MAAM,CAACsB,IAAK;IAAAC,QAAA,gBAC1BlB,OAAA;MAAKgB,SAAS,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnB,eACNtB,OAAA;MAAMgB,SAAS,EAAErB,MAAM,CAAC4B,UAAW;MAAAL,QAAA,gBACjClB,OAAA,CAACJ,KAAK;QACJ4B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,OAAQ;QACfuB,QAAQ,EAAKjB,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C,eACFtB,OAAA,CAACH,MAAM;QAAC+B,IAAI,EAAE,MAAO;QAACC,OAAO,EAAErB;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAAApB,EAAA,CAhCKD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkCT,eAAeA,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}