{"ast":null,"code":"var _jsxFileName = \"/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport styles from './App.module.scss';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\n\n// import OPENAI_API_KEY from './constants.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const OPENAI_API_KEY = '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';\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  useEffect(() => {}, []);\n  const answer = async text => {\n    let completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: text\n      }]\n    });\n    setLoading(true);\n    if (completion) {\n      setLoading(false);\n    }\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    setMessageList([...messages, message]);\n    answer(message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pre__home,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.home,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: [messages.map((mess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.message,\n          children: mess\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.home__form,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: 'send',\n          onClick: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8QFNYmcd6EKyFLRRLPGv6IKLhuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Configuration","OpenAIApi","styles","Input","Button","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","OPENAI_API_KEY","message","setMessage","messages","setMessageList","loading","setLoading","configuration","apiKey","openai","answer","text","completion","createChatCompletion","model","role","content","sendMessage","e","preventDefault","className","pre__home","children","home","map","mess","index","fileName","_jsxFileName","lineNumber","columnNumber","home__form","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Configuration, OpenAIApi} from 'openai'\n\nimport styles from './App.module.scss';\n\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\n\n// import OPENAI_API_KEY from './constants.js'\n\n\nconst App = () => {\n  const OPENAI_API_KEY = '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'\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  useEffect(() => {\n\n  }, [])\n\n  const answer = async (text) => {\n    let completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{role: \"user\", content: text }],\n    });\n\n    setLoading(true)\n\n    if (completion) {\n      setLoading(false);\n    }\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    setMessageList([...messages, message]);\n\n    answer(message);\n    setMessage('');\n  }\n\n  return (\n    <div className={styles.pre__home}>\n      <div className={styles.home}>\n        <div className={styles.messages}>\n          {messages.map((mess, index) => (\n            <div key={index} className={styles.message}>{mess}</div>\n          ))}\n        {loading? <Loading/>: <></>}\n        </div>\n        <form className={styles.home__form}>\n          <Input \n            type='text'\n            value={message}\n            onChange = {(e) => setMessage(e.target.value)}\n          />\n          <Button text={'send'} onClick={sendMessage}/>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}