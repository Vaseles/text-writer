{"ast":null,"code":"var _jsxFileName = \"/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport styles from './App.module.scss';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\n\n// import OPENAI_API_KEY from './constants.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const OPENAI_API_KEY = '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';\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const sendMessage = async e => {\n    e.preventDefault();\n    setMessageList([...messages, message]);\n\n    // let completion = await openai.createChatCompletion({\n    //   model: \"gpt-3.5-turbo\",\n    //   messages: [{role: \"user\", content: message }],\n    // });\n\n    // console.log(completion.data.choices[0].message);\n    // setMessageList([...messages, completion.data.choices[0].message.content]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ni/gNAGpELQBJ9RIptZ/yrXouio=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","styles","Input","Button","jsxDEV","_jsxDEV","App","_s","OPENAI_API_KEY","message","setMessage","messages","setMessageList","configuration","apiKey","openai","sendMessage","e","preventDefault","className","home","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {Configuration, OpenAIApi} from 'openai'\n\nimport styles from './App.module.scss';\n\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\n\n// import OPENAI_API_KEY from './constants.js'\n\n\nconst App = () => {\n  const OPENAI_API_KEY = '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'\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    setMessageList([...messages, message]);\n\n    // let completion = await openai.createChatCompletion({\n    //   model: \"gpt-3.5-turbo\",\n    //   messages: [{role: \"user\", content: message }],\n    // });\n\n    // console.log(completion.data.choices[0].message);\n    // setMessageList([...messages, completion.data.choices[0].message.content]);\n  }\n\n  return (\n    <div className={styles.home}>\n      \n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,aAAa,EAAEC,SAAS,QAAO,QAAQ;AAE/C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,cAAc,GAAG,qDAAqD;EAC5E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE/C,MAAMe,aAAa,GAAG,IAAId,aAAa,CAAC;IACtCe,MAAM,EAAEN;EACV,CAAC,CAAC;EAEF,MAAMO,MAAM,GAAG,IAAIf,SAAS,CAACa,aAAa,CAAC;EAE3C,MAAMG,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAElBN,cAAc,CAAC,CAAC,GAAGD,QAAQ,EAAEF,OAAO,CAAC,CAAC;;IAEtC;IACA;IACA;IACA;;IAEA;IACA;EACF,CAAC;;EAED,oBACEJ,OAAA;IAAKc,SAAS,EAAElB,MAAM,CAACmB;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEtB;AAEV,CAAC;AAAAjB,EAAA,CA9BKD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgCT,eAAeA,GAAG;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}