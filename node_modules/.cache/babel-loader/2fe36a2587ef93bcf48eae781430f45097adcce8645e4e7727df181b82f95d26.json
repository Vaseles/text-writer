{"ast":null,"code":"var _jsxFileName = \"/home/vaseles/projects/JavaScript/React/text-writer/src/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport styles from './App.module.scss';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\nimport { useTheme } from '../hooks/useTheme';\n\n// import OPENAI_API_KEY from './constants.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const OPENAI_API_KEY = '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';\n  const {\n    theme\n  } = useTheme();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState(localStorage.getItem('messages') ? JSON.parse(localStorage.getItem('messages')) : []);\n  const [isLoading, setIsLoading] = useState(false);\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const answer = async text => {\n    console.log(text);\n    // setIsLoading(true)\n    let completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: text\n      }]\n    });\n    setIsLoading(false);\n    setMessages([...messages, completion.data.choices[0].message.content]);\n    localStorage.setItem('messages', JSON.stringify(messages));\n  };\n  const sendMessage = e => {\n    e.preventDefault();\n    setMessages([...messages, message]);\n    answer(message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    style: theme == 'dark' ? {\n      backgroundColor: 'rgb(246, 241, 241, .1)'\n    } : {\n      backgroundColor: 'rgb(0,0,0, .05)',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messages,\n      children: [messages.map((mess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: mess\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.home__form,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), console.log(theme), /*#__PURE__*/_jsxDEV(Button, {\n        text: 'send',\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8aDupVcw+DPHLDvfCT6CbdLJYrw=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","styles","Input","Button","Loading","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","OPENAI_API_KEY","theme","message","setMessage","messages","setMessages","localStorage","getItem","JSON","parse","isLoading","setIsLoading","configuration","apiKey","openai","answer","text","console","log","completion","createChatCompletion","model","role","content","data","choices","setItem","stringify","sendMessage","e","preventDefault","className","home","style","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","map","mess","index","home__form","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/vaseles/projects/JavaScript/React/text-writer/src/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {Configuration, OpenAIApi} from 'openai'\n\nimport styles from './App.module.scss';\n\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\nimport { useTheme } from '../hooks/useTheme';\n\n// import OPENAI_API_KEY from './constants.js'\n\n\nconst App = () => {\n  const OPENAI_API_KEY = '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'\n\n  const {theme} = useTheme()\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState(localStorage.getItem('messages')? JSON.parse(localStorage.getItem('messages')) : []);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const answer = async (text) => {\n    console.log(text)\n    // setIsLoading(true)\n    let completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{role: \"user\", content: text }],\n    });\n\n    setIsLoading(false)\n    setMessages([...messages, completion.data.choices[0].message.content]);\n\n    localStorage.setItem('messages', JSON.stringify(messages));\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    setMessages([...messages, message]);\n\n    answer(message);\n    setMessage('');\n  }\n\n  return (\n    <div className={styles.home}\n    style = {\n      theme == 'dark'? {\n        backgroundColor: 'rgb(246, 241, 241, .1)',\n      } : {\n        backgroundColor: 'rgb(0,0,0, .05)',\n        color: '#000'\n      }\n    }\n    >\n      <h1></h1>\n      <div className={styles.messages}>\n        {messages.map((mess, index) => (\n          <div key={index} className={styles.message}>{mess}</div>\n        ))}\n      {isLoading? <Loading/>: <></>}\n      </div>\n      <form className={styles.home__form}>\n        <Input \n          type='text'\n          value={message}\n          onChange = {(e) => setMessage(e.target.value)}\n        />\n        {console.log(theme)}\n        <Button text={'send'} onClick={sendMessage}/>\n      </form>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}