{"ast":null,"code":"var _jsxFileName = \"/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport styles from './App.module.scss';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\n\n// import OPENAI_API_KEY from './constants.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const OPENAI_API_KEY = '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';\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const sendMessage = async e => {\n    e.preventDefault();\n    setMessageList([...messages, message]);\n\n    // let completion = await openai.createChatCompletion({\n    //   model: \"gpt-3.5-turbo\",\n    //   messages: [{role: \"user\", content: message }],\n    // });\n\n    // console.log(completion.data.choices[0].message);\n    // setMessageList([...messages, completion.data.choices[0].message.content]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pre__home,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.home,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: messages.map((mess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.message,\n          children: mess\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.home__form,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: 'send',\n          onClick: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4bdZm6poop1vRBb5hULhCmkwpAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","styles","Input","Button","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","OPENAI_API_KEY","message","setMessage","messages","setMessageList","loading","setLoading","configuration","apiKey","openai","sendMessage","e","preventDefault","className","pre__home","children","home","map","mess","index","fileName","_jsxFileName","lineNumber","columnNumber","home__form","type","value","onChange","target","text","onClick","_c","$RefreshReg$"],"sources":["/home/vaseles/projects/JavaScript/React/chatgpt-chat/src/App/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {Configuration, OpenAIApi} from 'openai'\n\nimport styles from './App.module.scss';\n\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\nimport Loading from '../components/UI/Loading/Loading';\n\n// import OPENAI_API_KEY from './constants.js'\n\n\nconst App = () => {\n  const OPENAI_API_KEY = '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'\n  const [message, setMessage] = useState('');\n  const [messages, setMessageList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const configuration = new Configuration({\n    apiKey: OPENAI_API_KEY,\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    setMessageList([...messages, message]);\n\n    // let completion = await openai.createChatCompletion({\n    //   model: \"gpt-3.5-turbo\",\n    //   messages: [{role: \"user\", content: message }],\n    // });\n\n    // console.log(completion.data.choices[0].message);\n    // setMessageList([...messages, completion.data.choices[0].message.content]);\n  }\n\n  return (\n    <div className={styles.pre__home}>\n      <div className={styles.home}>\n        <div className={styles.messages}>\n          {messages.map((mess, index) => (\n            <div key={index} className={styles.message}>{mess}</div>\n          ))}\n        </div>\n        {loading? <Loading/>: <></>}\n        <form className={styles.home__form}>\n          <Input \n            type='text'\n            value={message}\n            onChange = {(e) => setMessage(e.target.value)}\n          />\n          <Button text={'send'} onClick={sendMessage}/>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}